name: CI Pipeline

on:
  pull_request:
    branches:
      - main
      - develop
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Set environment variables
        run: |
          echo "DATABASE_URL=sqlite:///./test.db" >> $GITHUB_ENV
          echo "SECRET_KEY=test-secret-key" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r app-worker/requirements.txt
          pip install pytest pytest-cov

      - name: Run unit tests with coverage
        run: |
          export PYTHONPATH=.:app-worker
          pytest tests/ -v --cov=app --cov-report=xml --cov-report=html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/
          retention-days: 30

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          cd docker
          docker compose build api

  sonar:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Set environment variables
        run: |
          echo "DATABASE_URL=sqlite:///./test.db" >> $GITHUB_ENV
          echo "SECRET_KEY=test-secret-key" >> $GITHUB_ENV

      - name: Install dependencies for coverage
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r app-worker/requirements.txt
          pip install pytest pytest-cov

      - name: Generate coverage report
        run: |
          export PYTHONPATH=.:app-worker
          pytest tests/ -v --cov=app --cov=shared --cov-report=xml --cov-report=html --cov-fail-under=0

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL || 'https://sonarcloud.io' }}
        with:
          args: >
            -Dsonar.projectKey=leonelparrales22_ANB-Rising-Stars-Showcase
            -Dsonar.organization=leonelparrales22
            -Dsonar.sources=app/,shared/
            -Dsonar.tests=tests/
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.python.version=3.11
            -Dsonar.coverage.exclusions=tests/**,**/__pycache__/**
            ${{ github.ref_name == 'main' && '-Dsonar.leakPeriod=previous_version' || '-Dsonar.newCode.referenceBranch=main' }}
            ${{ github.event_name == 'pull_request' && format('-Dsonar.pullrequest.key={0}', github.event.number) || format('-Dsonar.branch.name={0}', github.head_ref || github.ref_name) }}
            ${{ github.event_name == 'pull_request' && format('-Dsonar.pullrequest.branch={0}', github.head_ref) || '' }}
            ${{ github.event_name == 'pull_request' && format('-Dsonar.pullrequest.base={0}', github.base_ref) || '' }}
