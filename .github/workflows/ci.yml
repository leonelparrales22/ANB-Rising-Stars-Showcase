name: CI Pipeline

on:
  pull_request:
    branches:
      - main
      - develop
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Set environment variables
        run: |
          echo "DATABASE_URL=sqlite:///./test.db" >> $GITHUB_ENV
          echo "SECRET_KEY=test-secret-key" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r app-worker/requirements.txt
          pip install pytest pytest-cov

      - name: Run unit tests with coverage
        run: |
          export PYTHONPATH=.:app-worker
          pytest tests/ -v --cov=app --cov-report=xml --cov-report=html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/
          retention-days: 30

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          cd docker
          docker compose build api

  sonar:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies for coverage
        run: |
          pip install -r requirements.txt
          pip install -r app-worker/requirements.txt
          pip install pytest pytest-cov

      - name: Generate coverage report
        run: |
          export PYTHONPATH=.:app-worker:shared
          # Cobertura para todas las carpetas de código
          pytest tests/ -v --cov=app --cov=app-worker --cov=shared --cov-report=xml --cov-report=html
          
          # Verificar que el coverage.xml se generó correctamente
          echo "=== Verificando coverage.xml ==="
          ls -la coverage.xml
          echo "=== Contenido inicial del coverage.xml ==="
          head -10 coverage.xml

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL || 'https://sonarcloud.io' }}
        with:
          args: >
            -Dsonar.projectKey=leonelparrales22_ANB-Rising-Stars-Showcase
            -Dsonar.organization=leonelparrales22
            -Dsonar.sources=app,app-worker,shared
            -Dsonar.tests=tests
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.python.coverage.plugin=pytest
            -Dsonar.python.version=3.11
            -Dsonar.coverage.exclusions=tests/**,**/__pycache__/**,**/*.pyc,venv/**,env/**
            -Dsonar.branch.name=${{ github.ref_name }}