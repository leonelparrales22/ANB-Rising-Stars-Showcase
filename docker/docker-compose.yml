services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    env_file:
      - ../.env
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:4.1.4-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    configs:
      - source: rabbitmq-plugins
        target: /etc/rabbitmq/enabled_plugins
    volumes:
      - rabbitmq-lib:/var/lib/rabbitmq/
      - rabbitmq-log:/var/log/rabbitmq/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672/api/healthchecks/node"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  redis:
    image: redis:8.2.2-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel notice --requirepass redis
    volumes:
      - redis-data:/data
      - redis-log:/var/log/redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: "5s"
      timeout: "3s"
      retries: 10

  api:
    build: ..
    restart: always
    env_file:
      - ../.env
    depends_on:
      - postgres
      - rabbitmq
      - redis
    ports:
      - "8000:8000"
    volumes:
      - ../uploads:/app/uploads
      - ../assets:/app/assets
      - ../shared:/app/shared

  worker:
    build:
      context: ..
      dockerfile: app-worker/Dockerfile
    restart: always
    env_file:
      - ../.env
    depends_on:
      - postgres
      - rabbitmq
      - redis
    volumes:
      - ../uploads:/app/uploads
      - ../assets:/app/assets
      - ../shared:/app/shared
    command: celery -A worker.celery_app worker --loglevel=info --queues=uploaded-videos

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      api:
        condition: service_healthy
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - worker
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "9000:3000"
    depends_on:
      - prometheus


configs:
  rabbitmq-plugins:
    content: "[rabbitmq_management]."

volumes:
  postgres-data:
  rabbitmq-lib:
  rabbitmq-log:
  redis-data:
  redis-log:
